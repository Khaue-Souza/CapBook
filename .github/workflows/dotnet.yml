name: .NET Core Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x' # Ajuste para a versão do .NET que você está usando

    - name: Restore dependencies
      run: dotnet restore ./Backend/SafeMangaRead/SafeMangaReadTest/SafeMangaReadTest.csproj

    - name: Build
      run: dotnet build ./Backend/SafeMangaRead/SafeMangaReadTest/SafeMangaReadTest.csproj --no-restore --configuration Release

    - name: Test with coverlet
      run: dotnet test ./Backend/SafeMangaRead/SafeMangaReadTest/SafeMangaReadTest.csproj --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/Coverage/
    
    - name: Show current directory
      run: |
        pwd
        ls
        cd Backend
        ls
    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:"./TestResults/Coverage/coverage.opencover.xml" -targetdir:"./TestResults/Coverage/Report" -reporttypes:HtmlInline;xml

    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: ./TestResults/Coverage/Report

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.cs.opencover.reportsPaths=./TestResults/Coverage/*.opencover.xml
          -Dsonar.exclusions=**/*Migrations*.*,**/*.Tests.*,**/obj/**/*.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
